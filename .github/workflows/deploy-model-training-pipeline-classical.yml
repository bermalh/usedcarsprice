name: deploy-model-training-pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  get-config:
    runs-on: ubuntu-latest
    outputs:
      resource_group: ${{ steps.extract.outputs.resource_group }}
      aml_workspace: ${{ steps.extract.outputs.aml_workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Verify YAML File Exists
        run: |
          if [ -f config-infra-prod.yml ]; then
            echo "File exists!"
            cat config-infra-prod.yml
          else
            echo "config-infra-prod.yml NOT FOUND!"
            exit 1
          fi
      
      - name: Install `yq` (Latest Version)
        run: |
          YQ_VERSION=v4.35.2  # Ensure this is the latest version
          wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
          echo "Installed `yq` version:"
          yq --version


      - name: Test yq Extraction
        run: |
          echo "Testing yq Extraction..."
          yq e '.resource_group' config-infra-prod.yml
          yq e '.aml_workspace' config-infra-prod.yml

      - name: Extract Config Values
        id: extract
        run: |
          export RESOURCE_GROUP=$(yq e '.resource_group' ./config-infra-prod.yml)
          export AML_WORKSPACE=$(yq e '.aml_workspace' ./config-infra-prod.yml)

          echo "Extracted RESOURCE_GROUP: $RESOURCE_GROUP"
          echo "Extracted AML_WORKSPACE: $AML_WORKSPACE"

          echo "resource_group=$RESOURCE_GROUP" >> $GITHUB_ENV
          echo "aml_workspace=$AML_WORKSPACE" >> $GITHUB_ENV

          echo "::set-output name=resource_group::$RESOURCE_GROUP"
          echo "::set-output name=aml_workspace::$AML_WORKSPACE"


  debug-config:
    needs: get-config
    runs-on: ubuntu-latest
    steps:
      - name: Debug Outputs
        run: |
          echo "Resource Group: ${{ needs.get-config.outputs.resource_group }}"
          echo "AML Workspace: ${{ needs.get-config.outputs.aml_workspace }}"

  deploy-model-training:
    needs: get-config  # Ensures get-config runs first
    runs-on: ubuntu-latest
    steps:
      - name: Deploy ML Model Training Pipeline
        run: |
          az ml pipeline create --file path/to/pipeline.yml \
          --resource-group "${{ needs.get-config.outputs.resource_group }}" \
          --workspace-name "${{ needs.get-config.outputs.aml_workspace }}"

  create-compute:
    needs: get-config
    uses: Azure/mlops-templates/.github/workflows/create-compute.yml@main
    with:
      cluster_name: cpu-cluster  # Name of your compute cluster
      size: Standard_DS11_v2  # VM size for your compute cluster
      min_instances: 0  # Minimum number of instances for your compute cluster
      max_instances: 1  # Maximum number of instances for your compute cluster
      cluster_tier: Dedicated  # Tier for your compute cluster
      resource_group: ${{ needs.get-config.outputs.resource_group }}
      workspace_name: ${{ needs.get-config.outputs.aml_workspace }}
    secrets:
      creds: ${{ secrets.AZURE_CREDENTIALS }}

  register-dataset:
    needs: get-config
    uses: Azure/mlops-templates/.github/workflows/register-dataset.yml@main
    with:
      resource_group: ${{ needs.get-config.outputs.resource_group }}
      workspace_name: ${{ needs.get-config.outputs.aml_workspace }}
      name: used-cars-data
      data_file: mlops/azureml/train/data.yml
    secrets:
      creds: ${{ secrets.AZURE_CREDENTIALS }}

  register-environment:
    needs: get-config
    uses: Azure/mlops-templates/.github/workflows/register-environment.yml@main
    with:
      resource_group: ${{ needs.get-config.outputs.resource_group }}
      workspace_name: ${{ needs.get-config.outputs.aml_workspace }}
      environment_file: mlops/azureml/train/train-env.yml
      conda_file: data-science/environment/train-conda.yml
    secrets:
      creds: ${{ secrets.AZURE_CREDENTIALS }}

  run-pipeline:
    needs: [get-config, register-environment, create-compute, register-dataset]
    uses: Azure/mlops-templates/.github/workflows/run-pipeline.yml@main
    with:
      resource_group: ${{ needs.get-config.outputs.resource_group }}
      workspace_name: ${{ needs.get-config.outputs.aml_workspace }}
      parameters-file: mlops/azureml/train/newpipeline.yml
      job-name: mlops-pipeline
    secrets:
      creds: ${{ secrets.AZURE_CREDENTIALS }}
